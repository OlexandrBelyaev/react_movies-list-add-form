{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","id","setData","event","setState","target","value","addFilm","preventDefault","props","add","this","type","onChange","onClick","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTc,GAAI,GANR,EASEC,QAAU,SAACL,GACT,OAAO,SAACM,GACN,EAAKC,SAAL,eACGP,EAAMM,EAAME,OAAOC,UAZ5B,EAiBEC,QAAU,SAACJ,GAAW,IAAD,EAMf,EAAKH,MAJPhB,EAFiB,EAEjBA,MACAC,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,OACAC,EALiB,EAKjBA,QAGFgB,EAAMK,iBAEQ,KAAVxB,GAAgC,KAAhBC,GAAiC,KAAXC,GAA6B,KAAZC,IAI3D,EAAKsB,MAAMC,IAAI,EAAKV,OACpB,EAAKI,SAAS,CACZpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTc,GAAI,MArCV,4CAyCE,WAAU,IAAD,EAMHU,KAAKX,MAJPhB,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OACAC,EALK,EAKLA,QAGF,OACE,0BAAMC,UAAU,QACd,wCAEE,2BACEwB,KAAK,OACLC,SAAUF,KAAKT,QAAQ,SACvBI,MAAOtB,KAGX,8CAEE,2BACE4B,KAAK,OACLC,SAAUF,KAAKT,QAAQ,eACvBI,MAAOrB,KAGX,4CAEE,2BACE2B,KAAK,OACLC,SAAUF,KAAKT,QAAQ,UACvBI,MAAOpB,KAGX,2CAEE,2BACE0B,KAAK,OACLC,SAAUF,KAAKT,QAAQ,WACvBI,MAAOnB,KAGX,0CAEE,2BACEyB,KAAK,SACLC,SAAUF,KAAKT,QAAQ,MACvBI,MAAOK,KAAKX,MAAMC,MAGtB,4BACEW,KAAK,SACLE,QAASH,KAAKJ,SAFhB,eA3FR,GAA8BQ,c,OCEjBC,EAAb,4MACEhB,MAAQ,CACNN,OAAQuB,GAFZ,EAKEC,SAAW,SAACtB,GACV,EAAKQ,UAAS,SAACJ,GACb,MAAO,CACLN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SARlC,4CAaE,WAAU,IACAF,EAAWiB,KAAKX,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEsB,IAAKC,KAAKO,iBAvBtB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a75b2bf4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    id: 0,\n  };\n\n  setData = (key) => {\n    return (event) => {\n      this.setState({\n        [key]: event.target.value,\n      });\n    };\n  }\n\n  addFilm = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    event.preventDefault();\n\n    if (title === '' || description === '' || imgUrl === '' || imdbUrl === '') {\n      return;\n    }\n\n    this.props.add(this.state);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      id: 0,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form className=\"form\">\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            onChange={this.setData('title')}\n            value={title}\n          />\n        </label>\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            onChange={this.setData('description')}\n            value={description}\n          />\n        </label>\n        <label>\n          Image Url:\n          <input\n            type=\"text\"\n            onChange={this.setData('imgUrl')}\n            value={imgUrl}\n          />\n        </label>\n        <label>\n          IMDB Url:\n          <input\n            type=\"text\"\n            onChange={this.setData('imdbUrl')}\n            value={imdbUrl}\n          />\n        </label>\n        <label>\n          IMDB Id:\n          <input\n            type=\"number\"\n            onChange={this.setData('id')}\n            value={this.state.id}\n          />\n        </label>\n        <button\n          type=\"button\"\n          onClick={this.addFilm}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  add: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            add={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}